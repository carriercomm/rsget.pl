# $Id$
# Get::FileSonic - File getter plugin for rsget.pl
#
# 2010 (c) Przemys≈Çaw Iskra <sparky@pld-linux.org>
#		This program is free software,
# you may distribute it under GPL v2 or newer.

name: FileSonic
short: FSC
web: "http://www.filesonic.com/"
tos: "http://www.filesonic.com/terms-and-conditions"
uri: qr{filesonic\.com/file/\d+}
uri: qr{(?:www\d+\.)?sharingmatrix\.com/file/\d+}
status: OK 2010-08-17

unify:
	return "http://www.filesonic.com/file/$1"
		if m{/file/(\d+)};

start:
	GET( $-{_uri} );

	ERROR( "file not found: $1" )
		if m#<div class="section CL1">.*?<p>\s*(.*?)\s*</p>#s;

	! m#<p class="fileInfo filename">.*?<strong>(.*?)</strong>#;
	( my $fn = $1 ) =~ s/\.\.\./\0/;
	! m#<span class="size">($STDSIZE)</span>#;
	INFO( aname => $fn, asize => $1 );

	! m#<a class="downloadNow" href="(.*?)" id="free_download">#;
	$-{dl_start} = $1;
	CLICK( $-{dl_start}, post => "", keep_referer => 1 );

	MULTI() if m#<span>Download session in progress</span>#;

stage_getlink:
	( $-{file_uri} ) = m{<p><a href="(.*?)"><span>Start download now!</span></a></p>};

	GOTO stage_download if $-{file_uri};

	if ( /var countDownDelay = (\d+);/ ) {
		$-{delay} = $1;
		GOTO stage_wait;
	}

	! m{Recaptcha\.create\("(.*?)"};
	$-{captcha_key} = $1;

	GET( "http://www.google.com/recaptcha/api/challenge?k=$-{captcha_key}&ajax=1&cachestop=" . rand,
		keep_referer => 1 );

	! ( $-{captcha_challenge} ) = m{challenge\s*:\s*'(.*?)'};

	GET( "http://www.google.com/recaptcha/api/image?c=" . $-{captcha_challenge},
		keep_referer => 1 );

	CAPTCHA(
		qr/\S+ \S+/
	);

	GET( $-{dl_start}, post => {
			recaptcha_challenge_field => $-{captcha_challenge},
			recaptcha_response_field => $_
		} );

	GOTO stage_getlink;

stage_wait:
	WAIT( -( $-{delay} + 5 ), "expecting download link" );

	GET( $-{dl_start}, post => "" );

	GOTO stage_getlink;

stage_download:
	CLICK_DOWNLOAD( $-{file_uri} );

# vim: filetype=perl:ts=4:sw=4
