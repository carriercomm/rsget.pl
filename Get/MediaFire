# $Id$
# Get::MediaFire - File getter plugin for rsget.pl
#
# 2009-2010 (c) Przemys≈Çaw Iskra <sparky@pld-linux.org>
#		This program is free software,
# you may distribute it under GPL v2 or newer.

name: MediaFire
short: MF
web: "http://www.mediafire.com/"
tos: "http://www.mediafire.com/terms_of_service.php"
uri: qr{mediafire\.com/(file/|\?)[a-z0-9]+}
cookie: mf
slots: max
status: BROKEN 2010-03-11

unify:
	return "http://www.mediafire.com/?$1" if
		m{mediafire\.com/(?:file/|\?)([a-z0-9]+)};

start:
	GET( $-{_uri} );

stage_init:
	if ( $-{_referer} =~ /error\.php/ ) {
		ERROR( "file not found" ) if /Invalid File/;
		ERROR( "some error" );
	}

	! m{<div class="download_file_title".*> (.+?) <div.*>\(($STDSIZE)\)</div> </div>}o;
	INFO( name => $1, asize => $2 );

	! /cu\('(.*?)','(.*?)','(.*?)'\);/;
	GET( "/dynamic/download.php?qk=$1&pk=$2&r=$3", keep_referer => 1 );

	! /^\s*(var.*var.*var.*)\s*function/m;
	my $vars = $1;
	my %vars = map { /var (.*?)='(.*?)'/ } split /;/, $vars;

	! m{href=\\"http://"\s*\+\s*(.*?)\s*\+'"};
	my $order = $1;
	my $code = join "", map { /'(.*)'/ ? $1 : $vars{ $_ } } split /\s*\+\s*/, $order;
	my $uri = "http://" . $code;

	DOWNLOAD( $uri );

	GOTO stage_init;

# vim: filetype=perl:ts=4:sw=4
